use aml::{load};
use super::*;

#[test]
fn smtp_builder_basic(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Email".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~".into())
        .display_name("Adam the Rusty".into())
        .auth_login(secrets.get("username").unwrap().into(), secrets.get("password").unwrap().into())
        .starttls()
        .send().unwrap();
}

#[test]
fn smtp_builder_attach_txt(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Email".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~".into())
        .display_name("Adam the Rusty".into())
        .auth_login(secrets.get("username").unwrap().into(), secrets.get("password").unwrap().into())
        .attach("test.txt".into(), ContentType::TextPlain).unwrap()
        .starttls()
        .send().unwrap();

    }
#[test]
fn smtp_builder_attach_docx(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Word Attachment".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~".into())
        .display_name("Adam the Rusty".into())
        .auth_login(secrets.get("username").unwrap().into(), secrets.get("password").unwrap().into())
        .attach("test.docx".into(), ContentType::ApplicationMSWord).unwrap()
        .starttls()
        .send().unwrap();
}

#[test]
fn smtp_builder_html(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing HTML".into())
        .body(r#"<h1>Hello world</h1>
        <img src="https://media.istockphoto.com/photos/curious-kitten-looking-at-the-camera-picture-id1270023880?b=1&k=20&m=1270023880&s=170667a&w=0&h=7tAE4L2d7qJ4k1OMydwof1kObkG6TuNkDj2n2QC88ic=" alt="Did it work?">
        "#.into())
        .display_name("Adam the Rusty".into())
        .auth_login(secrets.get("username").unwrap().into(), secrets.get("password").unwrap().into())
        .html_body()
        .starttls()
        .send().unwrap();
}

#[test]
fn smtp_builder_attach_img(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Email".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~<img src=\"cid:1\">".into())
        .display_name("Adam the Rusty".into())
        .auth_login(secrets.get("username").unwrap().into(), secrets.get("password").unwrap().into())
        .attach("cat.png".into(), ContentType::ImagePng).unwrap()
        .html_body()
        .starttls()
        .send().unwrap();
}

#[test]
#[should_panic]
fn smtp_builder_bad_host(){

    let secrets = load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        "".into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("This is a Subject".into())
        .body("This is a body - Generated by builder".into())
        .display_name("Adam the Rusty".into())
        .starttls()
        .send().unwrap();
}

#[test]
#[should_panic]
fn smtp_builder_empty_domain(){

    let secrets = aml::load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        secrets.get("host").unwrap().into(), //host 
        secrets.get("port").unwrap().into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        "".into() //domain
    );
    smtp_client_builder
        .subject("This is a Subject".into())
        .body("This is a body - Generated by builder".into())
        .display_name("Adam the Rusty".into())
        .starttls()
        .send().unwrap();
}
#[test]
fn recv_email_local_to_external(){


    let secrets = aml::load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        ("127.0.0.1").into(), //host 
        ("25").into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Email".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~".into())
        .auth_plain(secrets.get("plain_password").unwrap().into())
        .display_name("Adam the Rusty".into())
        .send().unwrap();
}
#[test]
fn recv_email_local_to_local(){


    let secrets = aml::load("secret.aml");

    let smtp_client_builder = SmtpBuilder::new(
        ("127.0.0.1").into(), //host 
        ("25").into(), //port
        secrets.get("sender").unwrap().into(), //sender
        secrets.get("local_recipient").unwrap().into(), //recipient
        secrets.get("domain").unwrap().into() //domain
    );
    smtp_client_builder
        .subject("Testing Email".into())
        .body("This is a body - Generated by builder\nCan I have 한글? 안녕하세요~~".into())
        .auth_plain(secrets.get("plain_password").unwrap().into())
        .display_name("Adam the Rusty".into())
        .send().unwrap();
}